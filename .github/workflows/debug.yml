name: Debug Assignment - Build & Test

on:
    push:
        branches:
            - main
        paths:
            - "Dockerfile.debug"
            - ".github/workflows/debug.yml"
    workflow_dispatch:

jobs:
    test-job:
        name: Run Tests (Debug Assignment)
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "20"

            - name: Install pnpm
              uses: pnpm/action-setup@v4
              with:
                  version: 8.14.1

            - name: Get pnpm store directory
              id: pnpm-cache
              shell: bash
              run: |
                  echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

            - name: Setup pnpm cache
              uses: actions/cache@v4
              with:
                  path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
                  key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
                  restore-keys: |
                      ${{ runner.os }}-pnpm-store-

            - name: Install dependencies
              run: pnpm install --frozen-lockfile

            - name: Run linter
              run: pnpm run lint

            - name: Run build test (ensures app compiles)
              run: pnpm run build

            - name: Test build artifacts
              run: |
                  if [ ! -d "dist" ]; then
                    echo "Build failed: dist directory not found"
                    exit 1
                  fi
                  if [ ! -f "dist/index.html" ]; then
                    echo "Build failed: index.html not found"
                    exit 1
                  fi
                  echo "Build artifacts verified successfully"

    build-job:
        name: Build Docker Image (Debug Assignment)
        runs-on: ubuntu-latest
        needs: test-job

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build Docker image from Dockerfile.debug
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile.debug
                  push: false
                  tags: leapfrog-journey:debug
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Test Docker image
              run: |
                  docker build -f Dockerfile.debug -t leapfrog-journey:debug-test .
                  echo "Docker image built successfully"
                  docker images | grep leapfrog-journey
