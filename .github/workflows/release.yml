name: Release Pipeline

on:
    push:
        tags:
            - "v*"

permissions:
    contents: write
    packages: write

jobs:
    build-and-release:
        name: Build, Scan, and Release
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                  fetch-depth: 0 # Fetch all history for changelog generation

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Extract version from tag
              id: version
              run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Build Docker image (Multi-stage)
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: false
                  load: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/leapfrog-journey:${{ steps.version.outputs.VERSION }}
                      ghcr.io/${{ github.repository_owner }}/leapfrog-journey:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Run Trivy vulnerability scanner
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: ghcr.io/${{ github.repository_owner }}/leapfrog-journey:${{ steps.version.outputs.VERSION }}
                  format: "sarif"
                  output: "trivy-results.sarif"
                  severity: "CRITICAL,HIGH"
                  exit-code: "1" # Fail the build if critical/high vulnerabilities found

            - name: Upload Trivy scan results to GitHub Security
              uses: github/codeql-action/upload-sarif@v3
              if: always()
              with:
                  sarif_file: "trivy-results.sarif"

            - name: Push Docker image to GitHub Container Registry
              uses: docker/build-push-action@v5
              with:
                  context: .
                  file: ./Dockerfile
                  push: true
                  tags: |
                      ghcr.io/${{ github.repository_owner }}/leapfrog-journey:${{ steps.version.outputs.VERSION }}
                      ghcr.io/${{ github.repository_owner }}/leapfrog-journey:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

            - name: Generate changelog
              id: changelog
              uses: mikepenz/release-changelog-builder-action@v4
              with:
                  configuration: ".github/changelog-config.json"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Create GitHub Release
              uses: softprops/action-gh-release@v1
              with:
                  tag_name: ${{ steps.version.outputs.VERSION }}
                  name: Release ${{ steps.version.outputs.VERSION }}
                  body: |
                      ## üöÄ Release ${{ steps.version.outputs.VERSION }}

                      ### üì¶ Docker Image
                      ```bash
                      docker pull ghcr.io/${{ github.repository_owner }}/leapfrog-journey:${{ steps.version.outputs.VERSION }}
                      ```

                      ### üìù Changelog
                      ${{ steps.changelog.outputs.changelog }}

                      ### üîí Security
                      - ‚úÖ Vulnerability scan passed
                      - ‚úÖ Multi-stage Docker build
                      - ‚úÖ Alpine-based images for minimal attack surface

                      ### üåê Live Demo
                      [View Application](https://santoshyadav-29.github.io/DevOps-Assignment/)
                  draft: false
                  prerelease: ${{ contains(steps.version.outputs.VERSION, '-alpha') || contains(steps.version.outputs.VERSION, '-beta') || contains(steps.version.outputs.VERSION, '-rc') }}
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Notify release success
              run: |
                  echo "‚úÖ Release ${{ steps.version.outputs.VERSION }} created successfully!"
                  echo "üê≥ Docker image pushed to ghcr.io/${{ github.repository_owner }}/leapfrog-journey:${{ steps.version.outputs.VERSION }}"
                  echo "üì¶ GitHub Release: https://github.com/${{ github.repository }}/releases/tag/${{ steps.version.outputs.VERSION }}"
